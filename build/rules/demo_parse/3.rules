
init_code: {s = {\}}

terminals:
  oct_int {'0'.<07>*}
  dec_int {<19>.d*}
  hex_int {'0'.[xX].(<09>+<af>+<AF>).(<09>+<af>+<AF>)*}

  lr_br {'('}
  rr_br {')'}

  plus {'+'}
  minus {'-'}
  asterisk {'*'}
  slash {'/'}
  percent {'%'}

  _SKIP_ {w.w*}
  _END_ {'\0'}

nonterminals:
  <start>
  <end_check>
  <program>
  <item_list>
  <item>
  <C>
  <B>
  <A>

rules:
  <start> -> <end_check> ->> {}

  <end_check> -> <program> _END_ ->> {}
  <end_check> -> _END_ ->> {}

  <program> -> <item_list> ->> {}

  <item_list> -> <item> <item_list> ->> {}
  <item_list> -> <item> ->> {}

  <item> -> <C>           ->> {print("result: "..s[#s])}
  <C> -> <C> plus <B>     ->> {s[#s-1] = s[#s-1] + table.remove(s)}
  <C> -> <C> minus <B>    ->> {s[#s-1] = s[#s-1] - table.remove(s)}
  <C> -> <B>              ->> {}
  <B> -> <B> asterisk <A> ->> {s[#s-1] = s[#s-1] * table.remove(s)}
  <B> -> <B> slash <A>    ->> {s[#s-1] = s[#s-1] / table.remove(s)}
  <B> -> <B> percent <A>  ->> {s[#s-1] = s[#s-1] % table.remove(s)}
  <B> -> <A>              ->> {}
  <A> -> lr_br <C> rr_br  ->> {}

  <A> -> oct_int ->> {table.insert(s,tonumber(rule_body(0),8))}
  <A> -> dec_int ->> {table.insert(s,tonumber(rule_body(0),10))}
  <A> -> hex_int ->> {table.insert(s,tonumber(rule_body(0)))}

